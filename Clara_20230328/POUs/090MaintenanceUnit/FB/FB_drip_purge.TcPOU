<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_drip_purge" Id="{06c8de9f-12ae-4875-b059-e082625ff16a}" SpecialFunc="None">
    <Declaration><![CDATA[(*不管什么时候，V7先断，再断V8,V9*)
FUNCTION_BLOCK FB_drip_purge
VAR_INPUT
	start_exe					    :BOOL;
	IntervalTime_W 			:LREAL;//min
	DripTime_W 				:LREAL;//sec
	PurgeTime_W 			:LREAL;//sec
	IntervalTime_C 			:LREAL;//min
	DripTime_C 				:LREAL;//sec
	PurgeTime_C 			   :LREAL;//sec
END_VAR
VAR_OUTPUT
	PurgeValve7				:BOOL;
	VacWhiteValve8			:BOOL;
	VacColorValve9			:BOOL;
	
END_VAR
VAR_IN_OUT
	has_dripped				:BOOL;
END_VAR
VAR
	start_r_trig:R_TRIG;
	start_f_trig:F_TRIG;
	step_change_trig:ARRAY[1..3] OF R_TRIG;
	step_change_en:BOOL;
	enable: BOOL;
	step:INT;
	step_W,step_C:INT;
	

	ton_IntervalTime_W 			:TON;//min
	ton_DripTime_W 				:TON;//sec
	ton_PurgeTime_W 			:TON;//sec
	ton_IntervalTime_C 			:TON;//min
	ton_DripTime_C 				:TON;//sec
	ton_PurgeTime_C 			:TON;//sec
	ton_delay					:TON;
	max_IntervalTime			:LREAL;
	ton_IntervalTime		 	:TON;//min
	
	Need_D_P_White:BOOL;//白墨时间到，需要滴压墨
	Need_D_P_Color:BOOL;//彩墨时间到，需要滴压墨
	step_both:INT;
	
	Dripping_trig:R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[start_r_trig(CLK:= start_exe , Q=> );
start_f_trig(CLK:=start_exe , Q=> );

IF start_r_trig.Q THEN
	enable :=TRUE;
	//has_dripped:=FALSE;
END_IF
IF start_f_trig.Q OR GVL.Emstop_Button THEN
	enable :=FALSE;
	//has_dripped:=FALSE;
END_IF


(*切换条件：1：按设置时间；
2:V7,V8,V9停止时
*)
IF NOT PurgeValve7 AND NOT VacWhiteValve8 AND NOT VacColorValve9 THEN 
	step_change_en:=TRUE;
ELSE step_change_en:=FALSE;
END_IF

IF step_change_en THEN 
	IF PurgeTime_W=0  AND PurgeTime_C=0 THEN 
			step:=1;
	ELSIF DripTime_W=0 AND DripTime_C=0 AND PurgeTime_W= PurgeTime_C 
			AND IntervalTime_W=IntervalTime_C THEN 
			step:=2;
	ELSE 
			step:=3;
	END_IF
END_IF
		
CASE step OF
1:ACT_eg1();
2:ACT_eg2();
3:ACT_eg3();
END_CASE

(*Going off means the upper SW is closed
- As soon as the upper SW is restarted we read that value (is should be true if you have dripped)
- Then we  will reset that value en everything restarts all over again
*)
Dripping_trig(CLK:=PurgeValve7 OR VacWhiteValve8 OR VacColorValve9 , Q=> );
IF Dripping_trig.Q THEN 
	has_dripped:=TRUE;
END_IF]]></ST>
    </Implementation>
    <Action Name="ACT_eg1" Id="{11ca721b-8b44-4a40-8f2f-14462131caa9}">
      <Implementation>
        <ST><![CDATA[IF enable THEN 
	ton_IntervalTime_W(IN:=NOT ton_IntervalTime_W.Q , PT:=LREAL_TO_TIME(IntervalTime_W)*1000*60 , Q=> , ET=> );
	ton_IntervalTime_C(IN:=NOT ton_IntervalTime_C.Q , PT:=LREAL_TO_TIME(IntervalTime_C)*1000*60 , Q=> , ET=> );
ELSE 
	ton_IntervalTime_W(IN:=FALSE);
	ton_IntervalTime_C(IN:=FALSE);
	ton_DripTime_W(IN:=FALSE);
	ton_DripTime_C(IN:=FALSE);
	step_W:=0;
	step_C:=0;	
	VacWhiteValve8:=FALSE;
	VacColorValve9:=FALSE;
	
END_IF
(******************Drip_White*****************************)
CASE step_W OF 
0://间隔
	IF ton_IntervalTime_W.Q THEN 
		step_W:=10;
	END_IF
10:
	IF DripTime_W>0 THEN 
		step_W:=20;
	ELSE 
		step_W:=0;
	END_IF
20:
	ton_DripTime_W(IN:=TRUE , PT:=LREAL_TO_TIME(DripTime_W)*1000 , Q=> , ET=> );
	VacWhiteValve8:=TRUE;
	IF ton_DripTime_W.Q THEN 
		step_W:=30;
	END_IF
30:
	VacWhiteValve8:=FALSE;
	ton_DripTime_W(IN:=FALSE);
	step_W:=0;
END_CASE
(******************Drip_Color*****************************)
CASE step_C OF 
0:
	IF ton_IntervalTime_C.Q THEN 
		step_C:=10;
	END_IF
10:
	IF DripTime_C>0 THEN 
		step_C:=20;
	ELSE 
		step_C:=0;
	END_IF
20:
	ton_DripTime_C(IN:=TRUE , PT:=LREAL_TO_TIME(DripTime_C)*1000 , Q=> , ET=> );
	VacColorValve9:=TRUE;
	IF ton_DripTime_C.Q THEN 
		step_C:=30;
	END_IF
30:
	VacColorValve9:=FALSE;
	ton_DripTime_C(IN:=FALSE);
	step_C:=0;	
END_CASE]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_eg2" Id="{3a24c4f9-4e66-4694-b188-d4e1889ca7b6}">
      <Implementation>
        <ST><![CDATA[IF enable THEN 
	ton_IntervalTime_W(IN:=NOT ton_IntervalTime_W.Q , PT:=LREAL_TO_TIME(IntervalTime_W)*1000*60 , Q=> , ET=> );
ELSE 
	ton_IntervalTime_W(IN:=FALSE);
	ton_IntervalTime_C(IN:=FALSE);
	ton_PurgeTime_W(IN:=FALSE);
	ton_PurgeTime_C(IN:=FALSE);
END_IF
(******************purge_White/Color****************************)
CASE step_W OF 
0://间隔
	IF ton_IntervalTime_W.Q THEN 
		step_W:=10;
	END_IF
10:
	IF PurgeTime_W>0 THEN 
		step_W:=20;
	ELSE 
		step_W:=0;
	END_IF
20:(**关闭功能时，先关V7在关其他*)
	ton_PurgeTime_W(IN:=TRUE , PT:=LREAL_TO_TIME(PurgeTime_W)*1000 , Q=> , ET=> );	
	VacWhiteValve8:=TRUE;
	VacColorValve9:=TRUE;
	PurgeValve7:=TRUE;
	IF ton_PurgeTime_W.Q OR start_f_trig.Q THEN 
		step_W:=30;
	END_IF
30:
	PurgeValve7:=FALSE;	
	ton_PurgeTime_W(IN:=FALSE);
	ton_delay(IN:=TRUE, PT:=T#1S , Q=> , ET=> );
	IF ton_delay.Q  THEN 
		step_W:=40;
	END_IF
40:
	ton_delay(IN:=FALSE);
	VacWhiteValve8:=FALSE;
	VacColorValve9:=FALSE;
	step_W:=0;
END_CASE
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_eg3" Id="{770129b4-d41c-4214-b47b-391b3bee4850}">
      <Implementation>
        <ST><![CDATA[(*1:先白墨滴;2:白墨压;3:彩墨滴;4:彩墨压;*)
max_IntervalTime:=MAX(IntervalTime_W,IntervalTime_C);
(*******单独计数，有时间差******)
IF enable THEN 
	ton_IntervalTime(IN:=NOT ton_IntervalTime.Q , PT:=LREAL_TO_TIME(max_IntervalTime)*1000*60 , Q=> , ET=> );
	ton_IntervalTime_W(IN:=NOT ton_IntervalTime_W.Q , PT:=LREAL_TO_TIME(IntervalTime_W)*1000*60 , Q=> , ET=> );
	ton_IntervalTime_C(IN:=NOT ton_IntervalTime_C.Q , PT:=LREAL_TO_TIME(IntervalTime_C)*1000*60 , Q=> , ET=> );
ELSE 
	ton_IntervalTime_W(IN:=FALSE);
	ton_IntervalTime_C(IN:=FALSE);
	ton_DripTime_W(IN:=FALSE);
	ton_DripTime_C(IN:=FALSE);
	ton_IntervalTime(IN:=FALSE);
	
	PurgeValve7:=FALSE;	
	Need_D_P_White:=FALSE;
	Need_D_P_Color:=FALSE;
	
END_IF
IF ton_IntervalTime_W.Q AND (DripTime_W>0 OR PurgeTime_W>0)  THEN 
	Need_D_P_White:=TRUE;
END_IF
IF ton_IntervalTime_C.Q AND (DripTime_C>0 OR PurgeTime_C>0)  THEN 
	Need_D_P_Color:=TRUE;
END_IF

CASE step_both OF
0://因2个计时器有时间差
	IF Need_D_P_White OR  Need_D_P_Color THEN 
		step_both:=5;
	END_IF
5://当有一个时，延迟一段时间再判断
	ton_delay(IN:=TRUE, PT:=T#500MS , Q=> , ET=> );
	IF ton_delay.Q  THEN
		ton_delay(IN:=FALSE);
		step_both:=6;		
	END_IF
6://判断
	IF Need_D_P_White THEN 
		Need_D_P_White:=FALSE;
		step_both:=10;	
	ELSIF NOT Need_D_P_White AND Need_D_P_Color THEN 
		Need_D_P_Color:=FALSE;
		step_both:=110;	
	ELSE 
		step_both:=0;	
	END_IF
(***************white***********************)
10:
	IF DripTime_W>0 THEN 
		step_both:=20;//有滴墨
	ELSE 
		step_both:=40;//无滴墨，有压墨
	END_IF
20://白滴墨
	ton_DripTime_W(IN:=TRUE , PT:=LREAL_TO_TIME(DripTime_W)*1000 , Q=> , ET=> );
	VacWhiteValve8:=TRUE;
	IF ton_DripTime_W.Q  THEN 
		step_both:=30;
	ELSIF start_f_trig.Q THEN 
		step_both:=21;
	END_IF
21://停止滴墨
	VacWhiteValve8:=FALSE;	
	Need_D_P_White:=FALSE;
	step_both:=0;
30://白滴墨结束
	ton_DripTime_W(IN:=FALSE);
	IF PurgeTime_W=0 THEN //无压墨
		VacWhiteValve8:=FALSE;
		Need_D_P_White:=FALSE;
		step_both:=100;
	ELSE
		step_both:=40;
	END_IF
40://白压墨
	ton_PurgeTime_W(IN:=TRUE , PT:=LREAL_TO_TIME(PurgeTime_W)*1000 , Q=> , ET=> );	
	VacWhiteValve8:=TRUE;
	PurgeValve7:=TRUE;
	IF ton_PurgeTime_W.Q OR start_f_trig.Q THEN 
		step_both:=50;
	END_IF
50://压墨结束
	PurgeValve7:=FALSE;	
	ton_PurgeTime_W(IN:=FALSE);
	ton_delay(IN:=TRUE, PT:=T#1S , Q=> , ET=> );
	IF ton_delay.Q  THEN 
		step_both:=60;
	END_IF
60://delay
	ton_delay(IN:=FALSE);
	VacWhiteValve8:=FALSE;
	Need_D_P_White:=FALSE;
	step_both:=100;

100://先间隔1S
	ton_delay(IN:=TRUE, PT:=T#1S , Q=> , ET=> );
	IF ton_delay.Q  THEN
		ton_delay(IN:=FALSE);
		step_both:=6;		
	END_IF
	(**************color**********************)
110:	
	IF DripTime_C>0 THEN 
		step_both:=120;//有滴墨
	ELSE 
		step_both:=140;//无滴墨，有压墨
	END_IF
120://彩滴墨
	ton_DripTime_C(IN:=TRUE , PT:=LREAL_TO_TIME(DripTime_C)*1000 , Q=> , ET=> );
	VacColorValve9:=TRUE;
	IF ton_DripTime_C.Q THEN 
		step_both:=130;
	END_IF
130://彩滴墨结束
	ton_DripTime_C(IN:=FALSE);
	IF PurgeTime_C=0 THEN 
		VacColorValve9:=FALSE;
		Need_D_P_Color:=FALSE;
		step_both:=100;
	ELSE 
		step_both:=140;
	END_IF
140://彩压墨
	ton_PurgeTime_C(IN:=TRUE , PT:=LREAL_TO_TIME(PurgeTime_C)*1000 , Q=> , ET=> );	
	VacColorValve9:=TRUE;
	PurgeValve7:=TRUE;
	IF ton_PurgeTime_C.Q OR start_f_trig.Q THEN 
		step_both:=150;
	END_IF
150:
	PurgeValve7:=FALSE;	
	ton_PurgeTime_C(IN:=FALSE);
	ton_delay(IN:=TRUE, PT:=T#1S , Q=> , ET=> );
	IF ton_delay.Q  THEN 
		step_both:=160;
	END_IF
160:
	ton_delay(IN:=FALSE);
	VacColorValve9:=FALSE;
	Need_D_P_Color:=FALSE;
	step_both:=0;
END_CASE]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="FB_drip_purge">
      <LineId Id="9" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="148" Count="2" />
      <LineId Id="269" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="214" Count="1" />
      <LineId Id="217" Count="0" />
      <LineId Id="216" Count="0" />
      <LineId Id="219" Count="0" />
      <LineId Id="218" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="196" Count="1" />
      <LineId Id="195" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="272" Count="1" />
      <LineId Id="265" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="266" Count="1" />
    </LineIds>
    <LineIds Name="FB_drip_purge.ACT_eg1">
      <LineId Id="25" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="64" Count="1" />
      <LineId Id="28" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="2" Count="1" />
      <LineId Id="5" Count="5" />
      <LineId Id="12" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="14" Count="9" />
      <LineId Id="4" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="40" Count="17" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
    </LineIds>
    <LineIds Name="FB_drip_purge.ACT_eg2">
      <LineId Id="2" Count="1" />
      <LineId Id="5" Count="4" />
      <LineId Id="15" Count="15" />
      <LineId Id="112" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="31" Count="3" />
      <LineId Id="103" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="85" Count="3" />
      <LineId Id="37" Count="0" />
      <LineId Id="89" Count="1" />
      <LineId Id="113" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_drip_purge.ACT_eg3">
      <LineId Id="1" Count="0" />
      <LineId Id="143" Count="1" />
      <LineId Id="7" Count="1" />
      <LineId Id="148" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="10" Count="4" />
      <LineId Id="145" Count="1" />
      <LineId Id="17" Count="0" />
      <LineId Id="175" Count="1" />
      <LineId Id="19" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="153" Count="4" />
      <LineId Id="27" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="159" Count="3" />
      <LineId Id="158" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="169" Count="1" />
      <LineId Id="165" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="40" Count="3" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="45" Count="3" />
      <LineId Id="178" Count="1" />
      <LineId Id="44" Count="0" />
      <LineId Id="180" Count="1" />
      <LineId Id="184" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="49" Count="3" />
      <LineId Id="171" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="53" Count="1" />
      <LineId Id="59" Count="1" />
      <LineId Id="62" Count="2" />
      <LineId Id="58" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="67" Count="4" />
      <LineId Id="66" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="77" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="84" Count="3" />
      <LineId Id="83" Count="0" />
      <LineId Id="97" Count="9" />
      <LineId Id="136" Count="0" />
      <LineId Id="107" Count="21" />
      <LineId Id="132" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>